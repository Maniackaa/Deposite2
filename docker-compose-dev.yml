version: '3'

volumes:
  pg_data:
  pgadmin_data:
  redis_data:
  static:
  media:

services:
  db_postgres:
    container_name: db_deposit
    image: postgres:14-alpine
    env_file: .env
    volumes:
      - ./postgres/init_db:/docker-entrypoint-initdb.d
#      - ./postgres/postgres-data.conf:/var/lib/postgresql/data
      - pg_data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    restart: always


  pgadmin:
    container_name: pgadmin_container_deposit
    image: dpage/pgadmin4:7.3
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD

    depends_on:
      - db_postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  redis:
    container_name: redis_deposit
    image: redis:alpine
    ports:
      - "6379:6379"
    expose:
      - '6379'
    volumes:
      - redis_data:/data

  backend:
    build: ./backend_deposit
    restart: always
    env_file: .env
#    environment:
#      - CELERY_BROKER_URL=redis://127.0.0.1:6379/0
#      - CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0
    depends_on:
      - db_postgres
      - redis
    volumes:
      - static:/app/collected_static/
      - media:/app/media/
      - ./logs/backend_deposit:/app/logs
      - ./backend_deposit:/app
    entrypoint: bash /app/entrypoint.sh


  celery:
    build: ./backend_deposit
    restart: always
    command: celery -A backend_deposit worker -l info
#    volumes:
#     - ./backend_deposit:/app
    env_file: .env
    depends_on:
      - redis
      - backend
#    entrypoint: bash /app/celery_entrypoint.sh

  celery-beat:
    build: ./backend_deposit
    command: celery -A backend_deposit beat -l info
#    volumes:
#     - ./backend_deposit:/app
    env_file: .env
    depends_on:
      - redis
      - backend

  nginx:
    image: nginx:1.19.3
    env_file: .env
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx_dev.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/app/static
      - media:/app/media
